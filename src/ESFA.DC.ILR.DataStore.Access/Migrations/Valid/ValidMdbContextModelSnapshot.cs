// <auto-generated />
using System;
using ESFA.DC.ILR.DataStore.Access;
using EntityFrameworkCore.Jet.Metadata;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ESFA.DC.ILR.DataStore.Access.Migrations.Valid
{
    [DbContext(typeof(ValidMdbContext))]
    partial class ValidMdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_ApprenticeshipPriceEpisode", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("PriceEpisodeIdentifier")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<DateTime?>("EpisodeEffectiveTNPStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("EpisodeStartDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("PriceEpisode1618FUBalValue")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisode1618FUMonthInstValue")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisode1618FUTotEarnings")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisode1618FrameworkUpliftRemainingAmount")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisode1618FrameworkUpliftTotPrevEarnings")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<DateTime?>("PriceEpisodeActualEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("PriceEpisodeActualEndDateIncEPA")
                        .HasColumnType("date");

                    b.Property<int?>("PriceEpisodeActualInstalments");

                    b.Property<int>("PriceEpisodeAimSeqNumber");

                    b.Property<decimal?>("PriceEpisodeApplic1618FrameworkUpliftCompElement")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeCappedRemainingTNPAmount")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("PriceEpisodeCompExemCode");

                    b.Property<bool?>("PriceEpisodeCompleted");

                    b.Property<decimal?>("PriceEpisodeCompletionElement")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<string>("PriceEpisodeContractType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("PriceEpisodeCumulativePMRs")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeExpectedTotalMonthlyValue")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<DateTime?>("PriceEpisodeFirstAdditionalPaymentThresholdDate")
                        .HasColumnType("date");

                    b.Property<string>("PriceEpisodeFundLineType")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("PriceEpisodeInstalmentValue")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<DateTime?>("PriceEpisodeLearnerAdditionalPaymentThresholdDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("PriceEpisodePlannedEndDate")
                        .HasColumnType("date");

                    b.Property<int?>("PriceEpisodePlannedInstalments");

                    b.Property<decimal?>("PriceEpisodePreviousEarnings")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodePreviousEarningsSameProvider")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<DateTime?>("PriceEpisodeRedStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("PriceEpisodeRedStatusCode");

                    b.Property<decimal?>("PriceEpisodeRemainingAmountWithinUpperLimit")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeRemainingTNPAmount")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<DateTime?>("PriceEpisodeSecondAdditionalPaymentThresholdDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("PriceEpisodeTotalEarnings")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeTotalPMRs")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeTotalTNPPrice")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeUpperBandLimit")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeUpperLimitAdjustment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("TNP1")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("TNP2")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("TNP3")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("TNP4")
                        .HasColumnType("decimal(12, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "PriceEpisodeIdentifier")
                        .HasName("PK__AEC_Appr__BCF596CAE82E5CA2");

                    b.HasIndex("UKPRN", "LearnRefNumber", "PriceEpisodeAimSeqNumber");

                    b.ToTable("Rulebase_AEC_ApprenticeshipPriceEpisode","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_ApprenticeshipPriceEpisode_Period", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("PriceEpisodeIdentifier")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<int>("Period");

                    b.Property<decimal?>("PriceEpisodeApplic1618FrameworkUpliftBalancing")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeApplic1618FrameworkUpliftCompletionPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeApplic1618FrameworkUpliftOnProgPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeBalancePayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeBalanceValue")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeCompletionPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeESFAContribPct")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeFirstDisadvantagePayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeFirstEmp1618Pay")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeFirstProv1618Pay")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("PriceEpisodeInstalmentsThisPeriod");

                    b.Property<decimal?>("PriceEpisodeLSFCash")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeLearnerAdditionalPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("PriceEpisodeLevyNonPayInd");

                    b.Property<decimal?>("PriceEpisodeOnProgPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeProgFundIndMaxEmpCont")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeProgFundIndMinCoInvest")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeSFAContribPct")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeSecondDisadvantagePayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeSecondEmp1618Pay")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeSecondProv1618Pay")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("PriceEpisodeTotProgFunding")
                        .HasColumnType("decimal(12, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "PriceEpisodeIdentifier", "Period")
                        .HasName("PK__AEC_Appr__9984F1E76EEDD44E");

                    b.HasIndex("UKPRN", "LearnRefNumber", "PriceEpisodeIdentifier")
                        .HasName("ix_AEC_ApprenticeshipPriceEpisodePeriod");

                    b.ToTable("Rulebase_AEC_ApprenticeshipPriceEpisode_Period","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_ApprenticeshipPriceEpisode_PeriodisedValue", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("PriceEpisodeIdentifier")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("AttributeName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Period_1")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_10")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_11")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_12")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_2")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_3")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_4")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_5")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_6")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_7")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_8")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_9")
                        .HasColumnType("decimal(12, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "PriceEpisodeIdentifier", "AttributeName")
                        .HasName("PK__AEC_Appr__4E0E98778DEB95A4");

                    b.ToTable("Rulebase_AEC_ApprenticeshipPriceEpisode_PeriodisedValues","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_HistoricEarningOutput", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("AppIdentifierOutput")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<bool?>("AppProgCompletedInTheYearOutput");

                    b.Property<int?>("HistoricDaysInYearOutput");

                    b.Property<DateTime?>("HistoricEffectiveTNPStartDateOutput")
                        .HasColumnType("date");

                    b.Property<int?>("HistoricEmpIdEndWithinYearOutput");

                    b.Property<int?>("HistoricEmpIdStartWithinYearOutput");

                    b.Property<int?>("HistoricFworkCodeOutput");

                    b.Property<DateTime?>("HistoricLearnDelProgEarliestACT2DateOutput")
                        .HasColumnType("date");

                    b.Property<bool?>("HistoricLearner1618AtStartOutput");

                    b.Property<decimal?>("HistoricPMRAmountOutput")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("HistoricProgTypeOutput");

                    b.Property<DateTime?>("HistoricProgrammeStartDateIgnorePathwayOutput")
                        .HasColumnType("date");

                    b.Property<DateTime?>("HistoricProgrammeStartDateMatchPathwayOutput")
                        .HasColumnType("date");

                    b.Property<int?>("HistoricPwayCodeOutput");

                    b.Property<int?>("HistoricSTDCodeOutput");

                    b.Property<decimal?>("HistoricTNP1Output")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("HistoricTNP2Output")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("HistoricTNP3Output")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("HistoricTNP4Output")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("HistoricTotal1618UpliftPaymentsInTheYear")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("HistoricTotalProgAimPaymentsInTheYear")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<double?>("HistoricULNOutput")
                        .HasColumnType("double");

                    b.Property<DateTime?>("HistoricUptoEndDateOutput")
                        .HasColumnType("date");

                    b.Property<decimal?>("HistoricVirtualTNP3EndofThisYearOutput")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("HistoricVirtualTNP4EndofThisYearOutput")
                        .HasColumnType("decimal(12, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AppIdentifierOutput")
                        .HasName("PK__AEC_Hist__9CDF0742E4D2441C");

                    b.ToTable("Rulebase_AEC_HistoricEarningOutput","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_Learner", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<double>("ULN")
                        .HasColumnType("double");

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__AEC_Lear__2770A727DCEB32DE");

                    b.ToTable("Rulebase_AEC_Learner","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<int?>("ActualDaysIL");

                    b.Property<int?>("ActualNumInstalm");

                    b.Property<DateTime?>("AdjStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("AgeAtProgStart");

                    b.Property<DateTime?>("AppAdjLearnStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("AppAdjLearnStartDateMatchPathway")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApplicCompDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("CombinedAdjProp")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<bool?>("Completed");

                    b.Property<DateTime?>("FirstIncentiveThresholdDate")
                        .HasColumnType("date");

                    b.Property<bool?>("FundStart");

                    b.Property<decimal?>("LDApplic1618FrameworkUpliftTotalActEarnings")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<string>("LearnAimRef")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<bool?>("LearnDel1618AtStart");

                    b.Property<int?>("LearnDelAccDaysILCareLeavers");

                    b.Property<int?>("LearnDelAppAccDaysIL");

                    b.Property<int?>("LearnDelAppPrevAccDaysIL");

                    b.Property<decimal?>("LearnDelApplicCareLeaverIncentive")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LearnDelApplicDisadvAmount")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LearnDelApplicEmp1618Incentive")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<DateTime?>("LearnDelApplicEmpDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("LearnDelApplicProv1618FrameworkUplift")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LearnDelApplicProv1618Incentive")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("LearnDelDaysIL");

                    b.Property<decimal?>("LearnDelDisadAmount")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<bool?>("LearnDelEligDisadvPayment");

                    b.Property<int?>("LearnDelEmpIdFirstAdditionalPaymentThreshold");

                    b.Property<int?>("LearnDelEmpIdSecondAdditionalPaymentThreshold");

                    b.Property<int?>("LearnDelHistDaysCareLeavers");

                    b.Property<int?>("LearnDelHistDaysThisApp");

                    b.Property<decimal?>("LearnDelHistProgEarnings")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<string>("LearnDelInitialFundLineType")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LearnDelLearnerAddPayThresholdDate")
                        .HasColumnType("date");

                    b.Property<bool?>("LearnDelMathEng");

                    b.Property<bool?>("LearnDelNonLevyProcured");

                    b.Property<int?>("LearnDelPrevAccDaysILCareLeavers");

                    b.Property<DateTime?>("LearnDelProgEarliestACT2Date")
                        .HasColumnType("date");

                    b.Property<int?>("LearnDelRedCode");

                    b.Property<DateTime?>("LearnDelRedStartDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("MathEngAimValue")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("OutstandNumOnProgInstalm");

                    b.Property<int?>("PlannedNumOnProgInstalm");

                    b.Property<int?>("PlannedTotalDaysIL");

                    b.Property<DateTime?>("SecondIncentiveThresholdDate")
                        .HasColumnType("date");

                    b.Property<int?>("ThresholdDays");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasName("PK__AEC_Lear__0C29443A7A5F5E02");

                    b.ToTable("Rulebase_AEC_LearningDelivery","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery_Period", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<int>("Period");

                    b.Property<decimal?>("DisadvFirstPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("DisadvSecondPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<string>("FundLineType")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("InstPerPeriod");

                    b.Property<decimal?>("LDApplic1618FrameworkUpliftBalancingPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LDApplic1618FrameworkUpliftCompletionPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LDApplic1618FrameworkUpliftOnProgPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<string>("LearnDelContType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("LearnDelESFAContribPct")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LearnDelFirstEmp1618Pay")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LearnDelFirstProv1618Pay")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LearnDelLearnAddPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("LearnDelLevyNonPayInd");

                    b.Property<bool?>("LearnDelSEMContWaiver");

                    b.Property<decimal?>("LearnDelSFAContribPct")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LearnDelSecondEmp1618Pay")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("LearnDelSecondProv1618Pay")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<bool?>("LearnSuppFund");

                    b.Property<decimal?>("LearnSuppFundCash")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("MathEngBalPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("MathEngOnProgPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("ProgrammeAimBalPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("ProgrammeAimCompletionPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("ProgrammeAimOnProgPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("ProgrammeAimProgFundIndMaxEmpCont")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("ProgrammeAimProgFundIndMinCoInvest")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("ProgrammeAimTotProgFund")
                        .HasColumnType("decimal(12, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "Period")
                        .HasName("PK__AEC_Lear__295823179EF311E4");

                    b.ToTable("Rulebase_AEC_LearningDelivery_Period","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery_PeriodisedTextValue", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("AttributeName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Period_1")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_10")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_11")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_12")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_2")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_3")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_4")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_5")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_6")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_7")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_8")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Period_9")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "AttributeName")
                        .HasName("PK__AEC_Lear__FED24A8757B2D350");

                    b.ToTable("Rulebase_AEC_LearningDelivery_PeriodisedTextValues","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery_PeriodisedValue", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("AttributeName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Period_1")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_10")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_11")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_12")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_2")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_3")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_4")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_5")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_6")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_7")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_8")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Period_9")
                        .HasColumnType("decimal(12, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "AttributeName")
                        .HasName("PK__AEC_Lear__FED24A875A4DEB8C");

                    b.ToTable("Rulebase_AEC_LearningDelivery_PeriodisedValues","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LARSVersion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("UKPRN");

                    b.ToTable("Rulebase_AEC_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__ALB_Lear__2770A727F41B74E3");

                    b.ToTable("Rulebase_ALB_Learner","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner_Period", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("Period");

                    b.Property<int?>("ALBSeqNum");

                    b.HasKey("UKPRN", "LearnRefNumber", "Period")
                        .HasName("PK__ALB_Lear__7066D5F50E1FA010");

                    b.ToTable("Rulebase_ALB_Learner_Period","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner_PeriodisedValue", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("AttributeName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Period_1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_10")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_11")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_12")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_3")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_4")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_5")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_6")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_7")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_8")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_9")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AttributeName")
                        .HasName("PK__ALB_Lear__08C04CF89C894027");

                    b.ToTable("Rulebase_ALB_Learner_PeriodisedValues","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_LearningDelivery", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<bool?>("Achieved");

                    b.Property<int?>("ActualNumInstalm");

                    b.Property<bool?>("AdvLoan");

                    b.Property<DateTime?>("ApplicFactDate")
                        .HasColumnType("date");

                    b.Property<string>("ApplicProgWeightFact")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("AreaCostFactAdj")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("AreaCostInstalment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<string>("FundLine")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("FundStart");

                    b.Property<DateTime?>("LiabilityDate")
                        .HasColumnType("date");

                    b.Property<bool?>("LoanBursAreaUplift");

                    b.Property<bool?>("LoanBursSupp");

                    b.Property<int?>("OutstndNumOnProgInstalm");

                    b.Property<int?>("PlannedNumOnProgInstalm");

                    b.Property<decimal?>("WeightedRate")
                        .HasColumnType("decimal(12, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasName("PK__ALB_Lear__0C29443A44B4AC36");

                    b.ToTable("Rulebase_ALB_LearningDelivery","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_LearningDelivery_Period", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<int>("Period");

                    b.Property<int?>("ALBCode");

                    b.Property<decimal?>("ALBSupportPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("AreaUpliftBalPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("AreaUpliftOnProgPayment")
                        .HasColumnType("decimal(12, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "Period")
                        .HasName("PK__ALB_Lear__29582317865EFC2E");

                    b.ToTable("Rulebase_ALB_LearningDelivery_Period","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_LearningDelivery_PeriodisedValue", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("AttributeName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Period_1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_10")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_11")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_12")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_3")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_4")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_5")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_6")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_7")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_8")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_9")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "AttributeName")
                        .HasName("PK__ALB_Lear__FED24A87A7EF9603");

                    b.ToTable("Rulebase_ALB_LearningDelivery_PeriodisedValues","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LARSVersion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PostcodeAreaCostVersion")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN")
                        .HasName("PK__ALB_glob__50F26B71A83A79C7");

                    b.ToTable("Rulebase_ALB_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AppFinRecord", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<int>("AppFinRecord_Id");

                    b.Property<int>("AFinAmount");

                    b.Property<int>("AFinCode");

                    b.Property<DateTime>("AFinDate")
                        .HasColumnType("date");

                    b.Property<string>("AFinType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("LearnRefNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "AppFinRecord_Id");

                    b.HasIndex("UKPRN", "LearnRefNumber", "AimSeqNumber", "AFinType")
                        .HasName("IX_Valid_AppFinRecord");

                    b.ToTable("Valid_AppFinRecord","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.CollectionDetail", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("Collection")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FilePreparationDate")
                        .HasColumnType("date");

                    b.HasKey("UKPRN", "Collection", "Year");

                    b.ToTable("Valid_CollectionDetails","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ContactPreference", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("ContPrefType")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int>("ContPrefCode");

                    b.HasKey("UKPRN", "LearnRefNumber", "ContPrefType", "ContPrefCode")
                        .HasName("PK_ContactPref");

                    b.HasIndex("LearnRefNumber", "ContPrefType")
                        .HasName("IX_Valid_ContactPreference");

                    b.ToTable("Valid_ContactPreference","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.DPOutcome", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("OutType")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int>("OutCode");

                    b.Property<DateTime>("OutStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("OutCollDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("OutEndDate")
                        .HasColumnType("date");

                    b.HasKey("UKPRN", "LearnRefNumber", "OutType", "OutCode", "OutStartDate", "OutCollDate");

                    b.ToTable("Valid_DPOutcome","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.DV_Learner", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("Learn_3rdSector");

                    b.Property<int?>("Learn_Active");

                    b.Property<int?>("Learn_ActiveJan");

                    b.Property<int?>("Learn_ActiveNov");

                    b.Property<int?>("Learn_ActiveOct");

                    b.Property<int?>("Learn_Age31Aug");

                    b.Property<int?>("Learn_BasicSkill");

                    b.Property<int?>("Learn_EmpStatFDL");

                    b.Property<int?>("Learn_EmpStatPrior");

                    b.Property<int?>("Learn_FirstFullLevel2");

                    b.Property<int?>("Learn_FirstFullLevel2Ach");

                    b.Property<int?>("Learn_FirstFullLevel3");

                    b.Property<int?>("Learn_FirstFullLevel3Ach");

                    b.Property<int?>("Learn_FullLevel2");

                    b.Property<int?>("Learn_FullLevel2Ach");

                    b.Property<int?>("Learn_FullLevel3");

                    b.Property<int?>("Learn_FullLevel3Ach");

                    b.Property<int?>("Learn_FundAgency");

                    b.Property<int?>("Learn_FundPrvYr");

                    b.Property<int?>("Learn_FundingSource");

                    b.Property<int?>("Learn_ILAcMonth1");

                    b.Property<int?>("Learn_ILAcMonth10");

                    b.Property<int?>("Learn_ILAcMonth11");

                    b.Property<int?>("Learn_ILAcMonth12");

                    b.Property<int?>("Learn_ILAcMonth2");

                    b.Property<int?>("Learn_ILAcMonth3");

                    b.Property<int?>("Learn_ILAcMonth4");

                    b.Property<int?>("Learn_ILAcMonth5");

                    b.Property<int?>("Learn_ILAcMonth6");

                    b.Property<int?>("Learn_ILAcMonth7");

                    b.Property<int?>("Learn_ILAcMonth8");

                    b.Property<int?>("Learn_ILAcMonth9");

                    b.Property<int?>("Learn_ILCurrAcYr");

                    b.Property<int?>("Learn_LargeEmployer");

                    b.Property<int?>("Learn_LenEmp");

                    b.Property<int?>("Learn_LenUnemp");

                    b.Property<int?>("Learn_LrnAimRecords");

                    b.Property<int?>("Learn_ModeAttPlanHrs");

                    b.Property<int?>("Learn_NotionLev");

                    b.Property<int?>("Learn_NotionLevV2");

                    b.Property<int?>("Learn_OLASS");

                    b.Property<int?>("Learn_PrefMethContact");

                    b.Property<int?>("Learn_PrimaryLLDD");

                    b.Property<int?>("Learn_PriorEducationStatus");

                    b.Property<int?>("Learn_UnempBenFDL");

                    b.Property<int?>("Learn_UnempBenPrior");

                    b.Property<decimal?>("Learn_Uplift1516EFA")
                        .HasColumnType("decimal(6, 5)");

                    b.Property<decimal?>("Learn_Uplift1516SFA")
                        .HasColumnType("decimal(6, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__DV_Learn__2770A727C4EB3FAE");

                    b.ToTable("Rulebase_DV_Learner","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.DV_LearningDelivery", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("LearnDel_AcMonthYTD")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<int?>("LearnDel_AccToApp");

                    b.Property<DateTime?>("LearnDel_AccToAppEmpDate")
                        .HasColumnType("date");

                    b.Property<int?>("LearnDel_AccToAppEmpStat");

                    b.Property<decimal?>("LearnDel_AchFullLevel2Pct")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("LearnDel_AchFullLevel3Pct")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("LearnDel_Achieved");

                    b.Property<int?>("LearnDel_AchievedIY");

                    b.Property<int?>("LearnDel_ActDaysILAfterCurrAcYr");

                    b.Property<int?>("LearnDel_ActDaysILCurrAcYr");

                    b.Property<int?>("LearnDel_ActEndDateOnAfterJan1");

                    b.Property<int?>("LearnDel_ActEndDateOnAfterNov1");

                    b.Property<int?>("LearnDel_ActEndDateOnAfterOct1");

                    b.Property<int?>("LearnDel_ActTotalDaysIL");

                    b.Property<int?>("LearnDel_ActiveIY");

                    b.Property<int?>("LearnDel_ActiveJan");

                    b.Property<int?>("LearnDel_ActiveNov");

                    b.Property<int?>("LearnDel_ActiveOct");

                    b.Property<int?>("LearnDel_AdvLoan");

                    b.Property<int?>("LearnDel_AgeAimOrigStart");

                    b.Property<int?>("LearnDel_AgeAtStart");

                    b.Property<int?>("LearnDel_App");

                    b.Property<int?>("LearnDel_App1618Fund");

                    b.Property<int?>("LearnDel_App1925Fund");

                    b.Property<int?>("LearnDel_AppAimType");

                    b.Property<int?>("LearnDel_AppKnowl");

                    b.Property<int?>("LearnDel_AppMainAim");

                    b.Property<int?>("LearnDel_AppNonFund");

                    b.Property<int?>("LearnDel_BasicSkills");

                    b.Property<int?>("LearnDel_BasicSkillsParticipation");

                    b.Property<int?>("LearnDel_BasicSkillsType");

                    b.Property<int?>("LearnDel_CarryIn");

                    b.Property<int?>("LearnDel_ClassRm");

                    b.Property<int?>("LearnDel_CompAimApp");

                    b.Property<int?>("LearnDel_CompAimProg");

                    b.Property<decimal?>("LearnDel_CompleteFullLevel2Pct")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("LearnDel_CompleteFullLevel3Pct")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("LearnDel_Completed");

                    b.Property<int?>("LearnDel_CompletedIY");

                    b.Property<int?>("LearnDel_EFACoreAim");

                    b.Property<int?>("LearnDel_Emp6MonthAimStart");

                    b.Property<int?>("LearnDel_Emp6MonthProgStart");

                    b.Property<DateTime?>("LearnDel_EmpDateBeforeFDL")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LearnDel_EmpDatePriorFDL")
                        .HasColumnType("date");

                    b.Property<int?>("LearnDel_EmpID");

                    b.Property<int?>("LearnDel_EmpStatFDL");

                    b.Property<int?>("LearnDel_EmpStatPrior");

                    b.Property<int?>("LearnDel_EmpStatPriorFDL");

                    b.Property<int?>("LearnDel_Employed");

                    b.Property<int?>("LearnDel_EnhanAppFund");

                    b.Property<decimal?>("LearnDel_FullLevel2AchPct")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("LearnDel_FullLevel2ContPct")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("LearnDel_FullLevel3AchPct")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("LearnDel_FullLevel3ContPct")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("LearnDel_FuncSkills");

                    b.Property<int?>("LearnDel_FundAgency");

                    b.Property<int?>("LearnDel_FundPrvYr");

                    b.Property<int?>("LearnDel_FundStart");

                    b.Property<string>("LearnDel_FundingLineType")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("LearnDel_FundingSource");

                    b.Property<int?>("LearnDel_GCE");

                    b.Property<int?>("LearnDel_GCSE");

                    b.Property<int?>("LearnDel_ILAcMonth1");

                    b.Property<int?>("LearnDel_ILAcMonth10");

                    b.Property<int?>("LearnDel_ILAcMonth11");

                    b.Property<int?>("LearnDel_ILAcMonth12");

                    b.Property<int?>("LearnDel_ILAcMonth2");

                    b.Property<int?>("LearnDel_ILAcMonth3");

                    b.Property<int?>("LearnDel_ILAcMonth4");

                    b.Property<int?>("LearnDel_ILAcMonth5");

                    b.Property<int?>("LearnDel_ILAcMonth6");

                    b.Property<int?>("LearnDel_ILAcMonth7");

                    b.Property<int?>("LearnDel_ILAcMonth8");

                    b.Property<int?>("LearnDel_ILAcMonth9");

                    b.Property<int?>("LearnDel_ILCurrAcYr");

                    b.Property<DateTime?>("LearnDel_IYActEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LearnDel_IYPlanEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LearnDel_IYStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("LearnDel_KeySkills");

                    b.Property<int?>("LearnDel_LargeEmpDiscountId");

                    b.Property<int?>("LearnDel_LargeEmployer");

                    b.Property<DateTime?>("LearnDel_LastEmpDate")
                        .HasColumnType("date");

                    b.Property<int?>("LearnDel_LeaveMonth");

                    b.Property<int?>("LearnDel_LenEmp");

                    b.Property<int?>("LearnDel_LenUnemp");

                    b.Property<int?>("LearnDel_LoanBursFund");

                    b.Property<int?>("LearnDel_NotionLevel");

                    b.Property<int?>("LearnDel_NotionLevelV2");

                    b.Property<int?>("LearnDel_NumHEDatasets");

                    b.Property<int?>("LearnDel_OLASS");

                    b.Property<int?>("LearnDel_OLASSCom");

                    b.Property<int?>("LearnDel_OLASSCus");

                    b.Property<int?>("LearnDel_OccupAim");

                    b.Property<DateTime?>("LearnDel_OrigStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("LearnDel_PlanDaysILAfterCurrAcYr");

                    b.Property<int?>("LearnDel_PlanDaysILCurrAcYr");

                    b.Property<int?>("LearnDel_PlanEndBeforeAug1");

                    b.Property<int?>("LearnDel_PlanEndOnAfterJan1");

                    b.Property<int?>("LearnDel_PlanEndOnAfterNov1");

                    b.Property<int?>("LearnDel_PlanEndOnAfterOct1");

                    b.Property<int?>("LearnDel_PlanTotalDaysIL");

                    b.Property<int?>("LearnDel_PriorEducationStatus");

                    b.Property<int?>("LearnDel_Prog");

                    b.Property<int?>("LearnDel_ProgAimAch");

                    b.Property<int?>("LearnDel_ProgAimApp");

                    b.Property<int?>("LearnDel_ProgCompleted");

                    b.Property<int?>("LearnDel_ProgCompletedIY");

                    b.Property<DateTime?>("LearnDel_ProgStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("LearnDel_QCF");

                    b.Property<int?>("LearnDel_QCFCert");

                    b.Property<int?>("LearnDel_QCFDipl");

                    b.Property<int?>("LearnDel_QCFType");

                    b.Property<int?>("LearnDel_RegAim");

                    b.Property<int?>("LearnDel_SFAApproved");

                    b.Property<string>("LearnDel_SecSubAreaTier1")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("LearnDel_SecSubAreaTier2")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int?>("LearnDel_SourceFundEFA");

                    b.Property<int?>("LearnDel_SourceFundSFA");

                    b.Property<int?>("LearnDel_StartBeforeApr1");

                    b.Property<int?>("LearnDel_StartBeforeAug1");

                    b.Property<int?>("LearnDel_StartBeforeDec1");

                    b.Property<int?>("LearnDel_StartBeforeFeb1");

                    b.Property<int?>("LearnDel_StartBeforeJan1");

                    b.Property<int?>("LearnDel_StartBeforeJun1");

                    b.Property<int?>("LearnDel_StartBeforeMar1");

                    b.Property<int?>("LearnDel_StartBeforeMay1");

                    b.Property<int?>("LearnDel_StartBeforeNov1");

                    b.Property<int?>("LearnDel_StartBeforeOct1");

                    b.Property<int?>("LearnDel_StartBeforeSep1");

                    b.Property<int?>("LearnDel_StartIY");

                    b.Property<int?>("LearnDel_StartJan1");

                    b.Property<int?>("LearnDel_StartMonth");

                    b.Property<int?>("LearnDel_StartNov1");

                    b.Property<int?>("LearnDel_StartOct1");

                    b.Property<int?>("LearnDel_SuccRateStat");

                    b.Property<int?>("LearnDel_TrainAimType");

                    b.Property<int?>("LearnDel_TransferDiffProvider");

                    b.Property<int?>("LearnDel_TransferDiffProviderGovStrat");

                    b.Property<int?>("LearnDel_TransferProvider");

                    b.Property<int?>("LearnDel_UfIProv");

                    b.Property<int?>("LearnDel_UnempBenFDL");

                    b.Property<int?>("LearnDel_UnempBenPrior");

                    b.Property<int?>("LearnDel_Withdrawn");

                    b.Property<string>("LearnDel_WorkplaceLocPostcode")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int?>("Prog_AccToApp");

                    b.Property<int?>("Prog_Achieved");

                    b.Property<int?>("Prog_AchievedIY");

                    b.Property<DateTime?>("Prog_ActEndDate")
                        .HasColumnType("date");

                    b.Property<int?>("Prog_ActiveIY");

                    b.Property<int?>("Prog_AgeAtStart");

                    b.Property<int?>("Prog_EarliestAim");

                    b.Property<int?>("Prog_Employed");

                    b.Property<int?>("Prog_FundPrvYr");

                    b.Property<int?>("Prog_ILCurrAcYear");

                    b.Property<int?>("Prog_LatestAim");

                    b.Property<int?>("Prog_SourceFundEFA");

                    b.Property<int?>("Prog_SourceFundSFA");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasName("PK__DV_Learn__0C29443A42561615");

                    b.ToTable("Rulebase_DV_LearningDelivery","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.DV_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN");

                    b.ToTable("Rulebase_DV_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESFVAL_ValidationError", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<long>("AimSeqNumber");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ErrorString")
                        .HasColumnType("memo")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("FieldValues")
                        .HasColumnType("memo")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("RuleId")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "AimSeqNumber", "LearnRefNumber");

                    b.ToTable("Rulebase_ESFVAL_ValidationError","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESFVAL_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN");

                    b.ToTable("Rulebase_ESFVAL_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_DPOutcome", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("OutCode");

                    b.Property<string>("OutType")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<DateTime>("OutStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("OutcomeDateForProgression")
                        .HasColumnType("date");

                    b.Property<bool?>("PotentialESFProgressionType");

                    b.Property<string>("ProgressionType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("ReachedSixMonthPoint");

                    b.Property<bool?>("ReachedThreeMonthPoint");

                    b.Property<bool?>("ReachedTwelveMonthPoint");

                    b.HasKey("UKPRN", "LearnRefNumber", "OutCode", "OutType", "OutStartDate")
                        .HasName("PK__ESF_DPOu__1D621D296741BAD4");

                    b.ToTable("Rulebase_ESF_DPOutcome","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_Learner", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__ESF_Lear__2770A7278C8AAC8F");

                    b.ToTable("Rulebase_ESF_Learner","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDelivery", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<bool?>("Achieved");

                    b.Property<bool?>("AddProgCostElig");

                    b.Property<decimal?>("AdjustedAreaCostFactor")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("AdjustedPremiumFactor")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<DateTime?>("AdjustedStartDate")
                        .HasColumnType("date");

                    b.Property<string>("AimClassification")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("AimValue")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("ApplicWeightFundRate")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<long?>("EligibleProgressionOutcomeCode");

                    b.Property<string>("EligibleProgressionOutcomeType")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<DateTime?>("EligibleProgressionOutomeStartDate")
                        .HasColumnType("date");

                    b.Property<bool?>("FundStart");

                    b.Property<decimal?>("LARSWeightedRate")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<DateTime?>("LDESFEngagementStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LatestPossibleStartDate")
                        .HasColumnType("date");

                    b.Property<bool?>("LearnDelLearnerEmpAtStart");

                    b.Property<bool?>("PotentiallyEligibleForProgression");

                    b.Property<DateTime?>("ProgressionEndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("Restart");

                    b.Property<decimal?>("WeightedRateFromESOL")
                        .HasColumnType("decimal(10, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasName("PK__ESF_Lear__0C29443A14EAB3B2");

                    b.ToTable("Rulebase_ESF_LearningDelivery","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDeliveryDeliverable", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("DeliverableCode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<decimal?>("DeliverableUnitCost")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "DeliverableCode")
                        .HasName("PK__ESF_Lear__C21F732A0F039CCC");

                    b.ToTable("Rulebase_ESF_LearningDeliveryDeliverable","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDeliveryDeliverable_Period", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("DeliverableCode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("Period");

                    b.Property<decimal?>("AchievementEarnings")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("AdditionalProgCostEarnings")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<long?>("DeliverableVolume");

                    b.Property<decimal?>("ProgressionEarnings")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<int?>("ReportingVolume");

                    b.Property<decimal?>("StartEarnings")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "DeliverableCode", "Period")
                        .HasName("PK__ESF_Lear__10486558B088848A");

                    b.ToTable("Rulebase_ESF_LearningDeliveryDeliverable_Period","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDeliveryDeliverable_PeriodisedValue", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("DeliverableCode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("AttributeName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Period_1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_10")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_11")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_12")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_3")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_4")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_5")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_6")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_7")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_8")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_9")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "DeliverableCode", "AttributeName")
                        .HasName("PK__ESF_Lear__1D30C3C17390F7A3");

                    b.ToTable("Rulebase_ESF_LearningDeliveryDeliverable_PeriodisedValues","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN");

                    b.ToTable("Rulebase_ESF_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.EmploymentStatusMonitoring", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<DateTime>("DateEmpStatApp")
                        .HasColumnType("date");

                    b.Property<string>("ESMType")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int?>("ESMCode");

                    b.HasKey("UKPRN", "LearnRefNumber", "DateEmpStatApp", "ESMType")
                        .HasName("PK__Employme__316BBA3120A1F4D6");

                    b.ToTable("Valid_EmploymentStatusMonitoring","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM25_FM35_Learner_Period", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("Period");

                    b.Property<decimal?>("LnrOnProgPay")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "Period")
                        .HasName("PK__FM25_FM3__7066D5F58D55B771");

                    b.ToTable("Rulebase_FM25_FM35_Learner_Period","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM25_FM35_Learner_PeriodisedValue", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("AttributeName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Period_1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_10")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_11")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_12")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_3")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_4")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_5")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_6")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_7")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_8")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_9")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AttributeName")
                        .HasName("PK__FM25_FM3__08C04CF854D339D5");

                    b.ToTable("Rulebase_FM25_FM35_Learner_PeriodisedValues","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM25_FM35_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN")
                        .HasName("PK__FM25_FM3__50F26B71528A48C1");

                    b.ToTable("Rulebase_FM25_FM35_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM25_Learner", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("AcadMonthPayment");

                    b.Property<bool?>("AcadProg");

                    b.Property<int?>("ActualDaysILCurrYear");

                    b.Property<decimal?>("AreaCostFact1618Hist")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("Block1DisadvUpliftNew")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("Block2DisadvElementsNew")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<string>("ConditionOfFundingEnglish")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ConditionOfFundingMaths")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("CoreAimSeqNumber");

                    b.Property<decimal?>("FullTimeEquiv")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<string>("FundLine")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("L3MathsEnglish1Year")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("L3MathsEnglish2Year")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<DateTime?>("LearnerActEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LearnerPlanEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LearnerStartDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("NatRate")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("OnProgPayment")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int?>("PlannedDaysILCurrYear");

                    b.Property<decimal?>("ProgWeightHist")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("ProgWeightNew")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("PrvDisadvPropnHist")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("PrvHistL3ProgMathEngProp")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("PrvHistLrgProgPropn")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("PrvRetentFactHist")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<string>("RateBand")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("RetentNew")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("StartFund");

                    b.Property<bool?>("TLevelStudent");

                    b.Property<int?>("ThresholdDays");

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__FM25_Lea__2770A7274A393956");

                    b.ToTable("Rulebase_FM25_Learner","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM25_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LARSVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("OrgVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PostcodeDisadvantageVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN")
                        .HasName("PK__FM25_glo__50F26B712170469F");

                    b.ToTable("Rulebase_FM25_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM35_Learner", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__FM35_Lea__2770A72792075518");

                    b.ToTable("Rulebase_FM35_Learner","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM35_LearningDelivery", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<DateTime?>("AchApplicDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("AchPayTransHeldBack")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("AchieveElement")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("AchievePayElig");

                    b.Property<decimal?>("AchievePayPctPreTrans")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("Achieved");

                    b.Property<int?>("ActualDaysIL");

                    b.Property<int?>("ActualNumInstalm");

                    b.Property<int?>("ActualNumInstalmPreTrans");

                    b.Property<int?>("ActualNumInstalmTrans");

                    b.Property<DateTime?>("AdjLearnStartDate")
                        .HasColumnType("date");

                    b.Property<bool?>("AdltLearnResp");

                    b.Property<int?>("AgeAimStart");

                    b.Property<decimal?>("AimValue")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("AppATAGTA");

                    b.Property<DateTime?>("AppAdjLearnStartDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("AppAgeFact")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("AppCompetency");

                    b.Property<bool?>("AppFuncSkill");

                    b.Property<decimal?>("AppFuncSkill1618AdjFact")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("AppKnowl");

                    b.Property<DateTime?>("AppLearnStartDate")
                        .HasColumnType("date");

                    b.Property<bool?>("AppNonFund");

                    b.Property<DateTime?>("ApplicEmpFactDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApplicFactDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApplicFundRateDate")
                        .HasColumnType("date");

                    b.Property<string>("ApplicProgWeightFact")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("ApplicUnweightFundRate")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("ApplicWeightFundRate")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("AreaCostFactAdj")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int?>("BalInstalmPreTrans");

                    b.Property<decimal?>("BaseValueUnweight")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("CapFactor")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("DisUpFactAdj")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("ESOL");

                    b.Property<bool?>("EmpOutcomePayElig");

                    b.Property<decimal?>("EmpOutcomePctHeldBackTrans")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("EmpOutcomePctPreTrans")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("EmpRespOth");

                    b.Property<bool?>("FullyFund");

                    b.Property<string>("FundLine")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("FundStart");

                    b.Property<decimal?>("LTRCUpliftFctr")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("LargeEmployerFM35Fctr")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int?>("LargeEmployerID");

                    b.Property<DateTime?>("LargeEmployerStatusDate")
                        .HasColumnType("date");

                    b.Property<string>("LearnDelFundOrgCode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("NonGovCont")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("OLASSCustody");

                    b.Property<decimal?>("OnProgPayPctPreTrans")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int?>("OutstndNumOnProgInstalm");

                    b.Property<int?>("OutstndNumOnProgInstalmTrans");

                    b.Property<int?>("PlannedNumOnProgInstalm");

                    b.Property<int?>("PlannedNumOnProgInstalmTrans");

                    b.Property<int?>("PlannedTotalDaysIL");

                    b.Property<int?>("PlannedTotalDaysILPreTrans");

                    b.Property<decimal?>("PropFundRemain")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("PropFundRemainAch")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("PrscHEAim");

                    b.Property<decimal?>("ReservedUpliftFactor1")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("ReservedUpliftRate1")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<bool?>("Residential");

                    b.Property<bool?>("Restart");

                    b.Property<decimal?>("SpecResUplift")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("StartPropTrans")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int?>("ThresholdDays");

                    b.Property<bool?>("Traineeship");

                    b.Property<bool?>("Trans");

                    b.Property<DateTime?>("TrnAdjLearnStartDate")
                        .HasColumnType("date");

                    b.Property<bool?>("TrnWorkPlaceAim");

                    b.Property<bool?>("TrnWorkPrepAim");

                    b.Property<decimal?>("UnWeightedRateFromESOL")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("UnweightedRateFromLARS")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("WeightedRateFromESOL")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("WeightedRateFromLARS")
                        .HasColumnType("decimal(10, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber");

                    b.ToTable("Rulebase_FM35_LearningDelivery","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM35_LearningDelivery_Period", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<int>("Period");

                    b.Property<decimal?>("AchievePayPct")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("AchievePayPctTrans")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("AchievePayment")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("BalancePayment")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("BalancePaymentUncapped")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("BalancePct")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("BalancePctTrans")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("EmpOutcomePay")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("EmpOutcomePct")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("EmpOutcomePctTrans")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int?>("InstPerPeriod");

                    b.Property<bool?>("LearnSuppFund");

                    b.Property<decimal?>("LearnSuppFundCash")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("OnProgPayPct")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("OnProgPayPctTrans")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("OnProgPayment")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<decimal?>("OnProgPaymentUncapped")
                        .HasColumnType("decimal(10, 5)");

                    b.Property<int?>("TransInstPerPeriod");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "Period");

                    b.ToTable("Rulebase_FM35_LearningDelivery_Period","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM35_LearningDelivery_PeriodisedValue", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("AttributeName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Period_1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_10")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_11")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_12")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_3")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_4")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_5")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_6")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_7")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_8")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_9")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "AttributeName");

                    b.ToTable("Rulebase_FM35_LearningDelivery_PeriodisedValues","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM35_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("CurFundYr")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("LARSVersion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("OrgVersion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PostcodeDisadvantageVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN")
                        .HasName("PK_FM35_Global");

                    b.ToTable("Rulebase_FM35_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FileDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CampusIdentifierVersion")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EasUploadDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployersVersion")
                        .HasMaxLength(50);

                    b.Property<long?>("FileSizeKb");

                    b.Property<string>("Filename")
                        .HasMaxLength(50);

                    b.Property<string>("LarsVersion")
                        .HasMaxLength(50);

                    b.Property<string>("OrgName")
                        .HasMaxLength(255);

                    b.Property<string>("OrgVersion")
                        .HasMaxLength(50);

                    b.Property<string>("PostcodesVersion")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("SubmittedTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Success");

                    b.Property<int?>("TotalErrorCount");

                    b.Property<int?>("TotalInvalidLearnersSubmitted");

                    b.Property<int?>("TotalLearnersSubmitted");

                    b.Property<int?>("TotalValidLearnersSubmitted");

                    b.Property<int?>("TotalWarningCount");

                    b.Property<int>("UKPRN");

                    b.HasKey("ID");

                    b.HasIndex("UKPRN", "Filename", "Success")
                        .IsUnique()
                        .HasName("PK_dbo.FileDetails");

                    b.ToTable("FileDetails");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LLDDandHealthProblem", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("LLDDCat");

                    b.Property<long>("LLDDandHealthProblem_ID");

                    b.Property<int?>("PrimaryLLDD");

                    b.HasKey("UKPRN", "LearnRefNumber", "LLDDCat", "LLDDandHealthProblem_ID")
                        .HasName("PK__LLDDandH__CFA94E1CE8035EFB");

                    b.ToTable("Valid_LLDDandHealthProblem","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.Learner", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("ALSCost");

                    b.Property<int?>("Accom");

                    b.Property<string>("AddLine1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AddLine2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AddLine3")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AddLine4")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CampId")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("EngGrade")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("Ethnicity");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("GivenNames")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("LLDDHealthProb");

                    b.Property<string>("MathGrade")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("NINumber")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<int?>("PMUKPRN");

                    b.Property<int?>("PlanEEPHours");

                    b.Property<int?>("PlanLearnHours");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("PostcodePrior")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("PrevLearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("PrevUKPRN");

                    b.Property<int?>("PriorAttain");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TelNo")
                        .HasMaxLength(18)
                        .IsUnicode(false);

                    b.Property<double>("ULN")
                        .HasColumnType("double");

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__Learner__2770A727B2BFB11C");

                    b.ToTable("Valid_Learner","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearnerDestinationandProgression", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<double>("ULN")
                        .HasColumnType("double");

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__LearnerD__2770A727F10815E3");

                    b.ToTable("Valid_LearnerDestinationAndProgression","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearnerEmploymentStatus", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<DateTime>("DateEmpStatApp")
                        .HasColumnType("date");

                    b.Property<int?>("EmpId");

                    b.Property<int>("EmpStat");

                    b.HasKey("UKPRN", "LearnRefNumber", "DateEmpStatApp")
                        .HasName("PK__LearnerE__7200C4BEAFD631A4");

                    b.ToTable("Valid_LearnerEmploymentStatus","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearnerFAM", b =>
                {
                    b.Property<int>("LearnFAMCode");

                    b.Property<string>("LearnFAMType")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("UKPRN");

                    b.HasKey("LearnFAMCode", "LearnFAMType", "LearnRefNumber", "UKPRN");

                    b.HasIndex("UKPRN", "LearnRefNumber")
                        .HasName("IX_Valid_LearnerFAM");

                    b.ToTable("Valid_LearnerFAM","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearnerHE", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int?>("TTACCOM");

                    b.Property<string>("UCASPERID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__LearnerH__2770A7278C262906");

                    b.ToTable("Valid_LearnerHE","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearnerHEFinancialSupport", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("FINTYPE");

                    b.Property<int>("FINAMOUNT");

                    b.HasKey("UKPRN", "LearnRefNumber", "FINTYPE")
                        .HasName("PK__LearnerH__09F54B72E8EE3D02");

                    b.ToTable("Valid_LearnerHEFinancialSupport","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<DateTime?>("AchDate")
                        .HasColumnType("date");

                    b.Property<int?>("AddHours");

                    b.Property<int>("AimType");

                    b.Property<int>("CompStatus");

                    b.Property<string>("ConRefNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("DelLocPostCode")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("EPAOrgID")
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<int?>("EmpOutcome");

                    b.Property<int>("FundModel");

                    b.Property<int?>("FworkCode");

                    b.Property<string>("LSDPostcode")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LearnActEndDate")
                        .HasColumnType("date");

                    b.Property<string>("LearnAimRef")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<DateTime>("LearnPlanEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("LearnStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("OTJActHours");

                    b.Property<DateTime?>("OrigLearnStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("OtherFundAdj");

                    b.Property<string>("OutGrade")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int?>("Outcome");

                    b.Property<int?>("PHours");

                    b.Property<int?>("PartnerUKPRN");

                    b.Property<int?>("PriorLearnFundAdj");

                    b.Property<int?>("ProgType");

                    b.Property<int?>("PwayCode");

                    b.Property<string>("SWSupAimId")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<int?>("StdCode");

                    b.Property<int?>("WithdrawReason");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasName("PK__Learning__0C29443A65800720");

                    b.ToTable("Valid_LearningDelivery","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearningDeliveryFAM", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<int>("LearningDeliveryFAM_Id");

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("LearnDelFAMCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LearnDelFAMDateFrom")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LearnDelFAMDateTo")
                        .HasColumnType("date");

                    b.Property<string>("LearnDelFAMType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("LearnRefNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearningDeliveryFAM_Id");

                    b.HasIndex("UKPRN", "LearnRefNumber", "AimSeqNumber", "LearnDelFAMType", "LearnDelFAMDateFrom")
                        .HasName("IX_Valid_LearningDeliveryFAM");

                    b.HasIndex("LearnRefNumber", "AimSeqNumber", "LearnDelFAMCode", "LearnDelFAMDateFrom", "LearnDelFAMDateTo", "UKPRN", "LearnDelFAMType")
                        .HasName("IX_Valid_LearningDeliveryFAM_UKPRN_FamType");

                    b.ToTable("Valid_LearningDeliveryFAM","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearningDeliveryHE", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("DOMICILE")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<int?>("ELQ");

                    b.Property<int>("FUNDCOMP");

                    b.Property<int>("FUNDLEV");

                    b.Property<int?>("GROSSFEE");

                    b.Property<string>("HEPostCode")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<int>("MODESTUD");

                    b.Property<int>("MSTUFEE");

                    b.Property<int?>("NETFEE");

                    b.Property<string>("NUMHUS")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("PCFLDCS")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<decimal?>("PCOLAB")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<decimal?>("PCSLDCS")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<decimal?>("PCTLDCS")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<string>("QUALENT3")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int?>("SEC");

                    b.Property<int?>("SOC2000");

                    b.Property<int>("SPECFEE");

                    b.Property<string>("SSN")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<decimal?>("STULOAD")
                        .HasColumnType("decimal(4, 1)");

                    b.Property<int>("TYPEYR");

                    b.Property<string>("UCASAPPID")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<int>("YEARSTU");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasName("PK__Learning__0C29443A32ADDE37");

                    b.ToTable("Valid_LearningDeliveryHE","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearningDeliveryWorkPlacement", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<DateTime>("WorkPlaceStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("WorkPlaceEmpId");

                    b.Property<DateTime?>("WorkPlaceEndDate")
                        .HasColumnType("date");

                    b.Property<int?>("WorkPlaceHours");

                    b.Property<int>("WorkPlaceMode");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "WorkPlaceStartDate");

                    b.HasIndex("UKPRN", "LearnRefNumber", "AimSeqNumber", "WorkPlaceStartDate", "WorkPlaceMode")
                        .HasName("IX_Valid_LearningDeliveryWorkPlacement");

                    b.ToTable("Valid_LearningDeliveryWorkPlacement","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearningProvider", b =>
                {
                    b.Property<int>("UKPRN");

                    b.HasKey("UKPRN")
                        .HasName("PK__Learning__50F26B716E3C9C2E");

                    b.ToTable("Valid_LearningProvider","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ProcessingData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExecutionTime")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<long>("FileDetailsID");

                    b.Property<string>("ProcessingStep")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("UKPRN");

                    b.HasKey("Id");

                    b.ToTable("ProcessingData");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ProviderSpecDeliveryMonitoring", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("ProvSpecDelMonOccur")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ProvSpecDelMon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "ProvSpecDelMonOccur")
                        .HasName("PK__Provider__9F5C508508BD8DA4");

                    b.ToTable("Valid_ProviderSpecDeliveryMonitoring","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ProviderSpecLearnerMonitoring", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("ProvSpecLearnMonOccur")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ProvSpecLearnMon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber", "ProvSpecLearnMonOccur")
                        .HasName("PK__Provider__63E551EA11099190");

                    b.ToTable("Valid_ProviderSpecLearnerMonitoring","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.Source", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("ComponentSetVersion")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ProtectiveMarking")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ReferenceData")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Release")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SerialNo")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("SoftwarePackage")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("SoftwareSupplier")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("UKPRN");

                    b.ToTable("Valid_Source","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.SourceFile", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("SourceFileName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FilePreparationDate")
                        .HasColumnType("date");

                    b.Property<string>("Release")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SerialNo")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("SoftwarePackage")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("SoftwareSupplier")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "SourceFileName");

                    b.HasIndex("SourceFileName")
                        .HasName("IX_Valid_SourceFile");

                    b.ToTable("Valid_SourceFile","Valid");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.TBL_Learner", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__TBL_Lear__2770A727E89D5C43");

                    b.ToTable("Rulebase_TBL_Learner","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.TBL_LearningDelivery", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<DateTime?>("AchApplicDate")
                        .HasColumnType("date");

                    b.Property<bool?>("AchEligible");

                    b.Property<decimal?>("AchPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<bool?>("Achieved");

                    b.Property<decimal?>("AchievementApplicVal")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<int?>("ActualDaysIL");

                    b.Property<int?>("ActualNumInstalm");

                    b.Property<DateTime?>("AdjProgStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("AdjStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("AgeStandardStart");

                    b.Property<DateTime?>("ApplicFundValDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("CombinedAdjProp")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<long?>("CoreGovContCapApplicVal");

                    b.Property<decimal?>("CoreGovContPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("CoreGovContUncapped")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<int?>("EmpIdAchDate");

                    b.Property<int?>("EmpIdFirstDayStandard");

                    b.Property<int?>("EmpIdFirstYoungAppDate");

                    b.Property<int?>("EmpIdSecondYoungAppDate");

                    b.Property<int?>("EmpIdSmallBusDate");

                    b.Property<string>("FundLine")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("InstPerPeriod");

                    b.Property<int?>("LearnDelDaysIL");

                    b.Property<int?>("LearnDelStandardAccDaysIL");

                    b.Property<int?>("LearnDelStandardPrevAccDaysIL");

                    b.Property<int?>("LearnDelStandardTotalDaysIL");

                    b.Property<bool?>("LearnSuppFund");

                    b.Property<decimal?>("LearnSuppFundCash")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("MathEngAimValue")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("MathEngBalPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<long?>("MathEngBalPct");

                    b.Property<bool?>("MathEngLSFFundStart");

                    b.Property<int?>("MathEngLSFThresholdDays");

                    b.Property<decimal?>("MathEngOnProgPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<int?>("MathEngOnProgPct");

                    b.Property<int?>("OutstandNumOnProgInstalm");

                    b.Property<int?>("PlannedNumOnProgInstalm");

                    b.Property<int?>("PlannedTotalDaysIL");

                    b.Property<DateTime?>("ProgStandardStartDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("SmallBusApplicVal")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<bool?>("SmallBusEligible");

                    b.Property<decimal?>("SmallBusPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<int?>("SmallBusStatusFirstDayStandard");

                    b.Property<int?>("SmallBusStatusThreshold");

                    b.Property<DateTime?>("SmallBusThresholdDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("YoungAppApplicVal")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<bool?>("YoungAppEligible");

                    b.Property<decimal?>("YoungAppFirstPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<DateTime?>("YoungAppFirstThresholdDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("YoungAppPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("YoungAppSecondPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<DateTime?>("YoungAppSecondThresholdDate")
                        .HasColumnType("date");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasName("PK__TBL_Lear__0C29443A0EB25480");

                    b.ToTable("Rulebase_TBL_LearningDelivery","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.TBL_LearningDelivery_Period", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<int>("Period");

                    b.Property<decimal?>("AchPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("CoreGovContPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("CoreGovContUncapped")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<int?>("InstPerPeriod");

                    b.Property<bool?>("LearnSuppFund");

                    b.Property<decimal?>("LearnSuppFundCash")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("MathEngBalPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("MathEngBalPct")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("MathEngOnProgPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("MathEngOnProgPct")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("SmallBusPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("YoungAppFirstPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("YoungAppPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("YoungAppSecondPayment")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "Period")
                        .HasName("PK__TBL_Lear__29582317486393F8");

                    b.ToTable("Rulebase_TBL_LearningDelivery_Period","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.TBL_LearningDelivery_PeriodisedValue", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("AimSeqNumber");

                    b.Property<string>("AttributeName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Period_1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_10")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_11")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_12")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_3")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_4")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_5")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_6")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_7")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_8")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Period_9")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "AttributeName")
                        .HasName("PK__TBL_Lear__FED24A874580EF4D");

                    b.ToTable("Rulebase_TBL_LearningDelivery_PeriodisedValues","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.TBL_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("CurFundYr")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LARSVersion")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN")
                        .HasName("PK__TBL_glob__50F26B71EBE63747");

                    b.ToTable("Rulebase_TBL_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.VALDP_ValidationError", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ErrorString")
                        .HasColumnType("memo")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("FieldValues")
                        .HasColumnType("memo")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("RuleId")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber");

                    b.ToTable("Rulebase_VALDP_ValidationError","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.VALDP_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("OrgVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ULNVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UKPRN")
                        .HasName("PK__VALDP_gl__50F26B716DFF4FC0");

                    b.ToTable("Rulebase_VALDP_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.VALFD_ValidationError", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<long>("AimSeqNumber");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ErrorString")
                        .HasColumnType("memo")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("FieldValues")
                        .HasColumnType("memo")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("RuleId")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "AimSeqNumber", "LearnRefNumber");

                    b.ToTable("Rulebase_VALFD_ValidationError","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.VAL_Learner", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "LearnRefNumber")
                        .HasName("PK__VAL_Lear__2770A727A3CB7E15");

                    b.ToTable("Rulebase_VAL_Learner","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.VAL_LearningDelivery", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<int>("AimSeqNumber");

                    b.HasKey("UKPRN", "AimSeqNumber")
                        .HasName("PK__VAL_Lear__E56C5AA3B1E071EC");

                    b.ToTable("Rulebase_VAL_LearningDelivery","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.VAL_ValidationError", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<long>("AimSeqNumber");

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ErrorString")
                        .HasColumnType("memo")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("FieldValues")
                        .HasColumnType("memo")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("RuleId")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UKPRN", "AimSeqNumber", "LearnRefNumber");

                    b.ToTable("Rulebase_VAL_ValidationError","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.VAL_global", b =>
                {
                    b.Property<int>("UKPRN");

                    b.Property<string>("EmployerVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LARSVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("OrgVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PostcodeVersion")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RulebaseVersion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("UKPRN")
                        .HasName("PK__VAL_glob__50F26B71B1C27011");

                    b.ToTable("Rulebase_VAL_global","Rulebase");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ValidationError", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("AimSeqNum");

                    b.Property<string>("ErrorMessage");

                    b.Property<string>("FieldValues")
                        .HasColumnType("memo")
                        .HasMaxLength(2000);

                    b.Property<int?>("FileLevelError");

                    b.Property<string>("LearnAimRef")
                        .HasColumnType("memo")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("LearnRefNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("RuleName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SWSupAimID")
                        .HasColumnType("memo")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Severity")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("UKPRN");

                    b.HasKey("Id");

                    b.HasIndex("UKPRN")
                        .HasName("IX_ValidationError");

                    b.ToTable("dbo_ValidationError");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.VersionInfo", b =>
                {
                    b.Property<int>("Version");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.HasKey("Version");

                    b.ToTable("VersionInfo");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_ApprenticeshipPriceEpisode", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.AEC_Learner", "AEC_Learner")
                        .WithMany("AEC_ApprenticeshipPriceEpisodes")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_AECApprenticeshipPriceEpisode_AECLearner");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithMany("AEC_ApprenticeshipPriceEpisodes")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "PriceEpisodeAimSeqNumber")
                        .HasConstraintName("FK_AEC_ApprenticeshipPriceEpisode_ValidLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_ApprenticeshipPriceEpisode_Period", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.AEC_ApprenticeshipPriceEpisode", "AEC_ApprenticeshipPriceEpisode")
                        .WithMany("AEC_ApprenticeshipPriceEpisode_Periods")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "PriceEpisodeIdentifier")
                        .HasConstraintName("FK_AECApprenticeshipPriceEpisodePeriod_AECApprenticeshipPriceEpisode");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_ApprenticeshipPriceEpisode_PeriodisedValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.AEC_ApprenticeshipPriceEpisode", "AEC_ApprenticeshipPriceEpisode")
                        .WithMany("AEC_ApprenticeshipPriceEpisode_PeriodisedValues")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "PriceEpisodeIdentifier")
                        .HasConstraintName("FK_AECApprenticeshipPriceEpisodePeriodisedValues_AECApprenticeshipPriceEpisode");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_Learner", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.AEC_global", "UKPRNNavigation")
                        .WithMany("AEC_Learners")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("FK_AECLearner_AECglobal");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithOne("AEC_Learner")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.AEC_Learner", "UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_AEC_Learner_ValidLearner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.AEC_Learner", "AEC_Learner")
                        .WithMany("AEC_LearningDeliveries")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_AECLearningDelivery_AECLearner");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithOne("AEC_LearningDelivery")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery", "UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_AEC_LearningDelivery_ValidLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery_Period", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery", "AEC_LearningDelivery")
                        .WithMany("AEC_LearningDelivery_Periods")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_AECLearningDeliveryPeriod_AECLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery_PeriodisedTextValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery", "AEC_LearningDelivery")
                        .WithMany("AEC_LearningDelivery_PeriodisedTextValues")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_AECLearningDeliveryPeriodisedTextValues_AECLearningDeliveryPeriod");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery_PeriodisedValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.AEC_LearningDelivery", "AEC_LearningDelivery")
                        .WithMany("AEC_LearningDelivery_PeriodisedValues")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_AECLearningDeliveryPeriodisedValues_AECLearningDeliveryPeriod");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ALB_global", "UKPRNNavigation")
                        .WithMany("ALB_Learners")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("FK_ALBLearner_ALBglobal");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithOne("ALB_Learner")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner", "UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_ALB_Learner_ValidLearner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner_Period", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner", "ALB_Learner")
                        .WithMany("ALB_Learner_Periods")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_ALBLearnerPeriod_ALBLearner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner_PeriodisedValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner", "ALB_Learner")
                        .WithMany("ALB_Learner_PeriodisedValues")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_ALBLearnerPeriodisedValues_ALBLearner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_LearningDelivery", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ALB_Learner", "ALB_Learner")
                        .WithMany("ALB_LearningDeliveries")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_ALBLearningDelivery_ALBLearner");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithOne("ALB_LearningDelivery")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.ALB_LearningDelivery", "UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_ALB_LearningDelivery_ValidLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_LearningDelivery_Period", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ALB_LearningDelivery", "ALB_LearningDelivery")
                        .WithMany("ALB_LearningDelivery_Periods")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_ALBLearningDeliveryPeriod_ALBLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ALB_LearningDelivery_PeriodisedValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ALB_LearningDelivery", "ALB_LearningDelivery")
                        .WithMany("ALB_LearningDelivery_PeriodisedValues")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_ALBLearningDeliveryPeriodisedValues_ALBLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.AppFinRecord", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithMany("AppFinRecords")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_AppFinRecord_LearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ContactPreference", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithMany("ContactPreferences")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_ContactPreference_Learner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.DPOutcome", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearnerDestinationandProgression", "LearnerDestinationandProgression")
                        .WithMany("DPOutcomes")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_DPOutcome_LearnerDestinationandProgression");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.DV_Learner", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.DV_global", "UKPRNNavigation")
                        .WithMany("DV_Learners")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("FK_DVLearner_DVglobal");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.DV_LearningDelivery", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.DV_Learner", "DV_Learner")
                        .WithMany("DV_LearningDeliveries")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_DVLearningDelivery_DVLearner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_Learner", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ESF_global", "UKPRNNavigation")
                        .WithMany("ESF_Learners")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("FK_ESFLearner_ESFglobal");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithOne("ESF_Learner")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.ESF_Learner", "UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_ESF_Learner_ValidLearner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDelivery", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ESF_Learner", "ESF_Learner")
                        .WithMany("ESF_LearningDeliveries")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_ESFLearningDelivery_ESFLearner");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithOne("ESF_LearningDelivery")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDelivery", "UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_ESF_LearningDelivery_ValidLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDeliveryDeliverable", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDelivery", "ESF_LearningDelivery")
                        .WithMany("ESF_LearningDeliveryDeliverables")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_ESFLearningDeliveryDeliverable_ESFLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDeliveryDeliverable_Period", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDelivery", "ESF_LearningDelivery")
                        .WithMany("ESF_LearningDeliveryDeliverable_Periods")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_ESFLearningDeliveryDeliverablePeriod_ESFLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDeliveryDeliverable_PeriodisedValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.ESF_LearningDeliveryDeliverable", "ESF_LearningDeliveryDeliverable")
                        .WithMany("ESF_LearningDeliveryDeliverable_PeriodisedValues")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber", "DeliverableCode")
                        .HasConstraintName("FK_ESFLearningDeliveryDeliverablePeriodisedValues_ESFLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM25_FM35_Learner_Period", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.FM25_FM35_global", "UKPRNNavigation")
                        .WithMany("FM25_FM35_Learner_Periods")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("FK_FM25FM35LearnerPeriod_FM25FM35global");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.FM25_Learner", "FM25_Learner")
                        .WithMany("FM25_FM35_Learner_Periods")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_FM25_FM35_Learner_Period_FM25_Learner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM25_FM35_Learner_PeriodisedValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.FM25_FM35_global", "UKPRNNavigation")
                        .WithMany("FM25_FM35_Learner_PeriodisedValues")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("FK_FM25FM35LearnerPeriodisedValues_FM25FM35global");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.FM25_Learner", "FM25_Learner")
                        .WithMany("FM25_FM35_Learner_PeriodisedValues")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_FM25_FM35_Learner_PeriodisedValues_FM25_Learner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM25_Learner", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.FM25_global", "UKPRNNavigation")
                        .WithMany("FM25_Learners")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("FK_FM25Learner_FM25global");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithOne("FM25_Learner")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.FM25_Learner", "UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_FM25_Learner_ValidLearner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM35_Learner", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.FM35_global", "UKPRNNavigation")
                        .WithMany("FM35_Learners")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("FK_FM35Learner_FM35global");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithOne("FM35_Learner")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.FM35_Learner", "UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_FM35_Learner_ValidLearner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM35_LearningDelivery", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.FM35_Learner", "FM35_Learner")
                        .WithMany("FM35_LearningDeliveries")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_FM35LearningDelivery_FM35Learner");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithOne("FM35_LearningDelivery")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.FM35_LearningDelivery", "UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_FM35_LearningDelivery_ValidLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM35_LearningDelivery_Period", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.FM35_LearningDelivery", "FM35_LearningDelivery")
                        .WithMany("FM35_LearningDelivery_Periods")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_FM35LearningDeliveryPeriod_FM35LearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.FM35_LearningDelivery_PeriodisedValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.FM35_LearningDelivery", "FM35_LearningDelivery")
                        .WithMany("FM35_LearningDelivery_PeriodisedValues")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_FM35LearningDeliveryPeriodisedValues_FM35LearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LLDDandHealthProblem", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithMany("LLDDandHealthProblems")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_LLDDandHealthProblem_Learner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearnerEmploymentStatus", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithMany("LearnerEmploymentStatuses")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_LearnerEmploymentStatus_Learner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearnerFAM", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithMany("LearnerFAMs")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_LearnerFAM_Learner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearnerHE", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithOne("LearnerHE")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.LearnerHE", "UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_LearnerHE_Learner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearnerHEFinancialSupport", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearnerHE", "LearnerHE")
                        .WithMany("LearnerHEFinancialSupports")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_LearnerHEFinancialSupport_LearnerHE");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithMany("LearningDeliveries")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_LearningDelivery_Learner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearningDeliveryFAM", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithMany("LearningDeliveryFAMs")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_LearningDeliveryFAM_LearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearningDeliveryHE", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithOne("LearningDeliveryHE")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.LearningDeliveryHE", "UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_LearningDeliveryHE_LearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.LearningDeliveryWorkPlacement", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithMany("LearningDeliveryWorkPlacements")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_LearningDeliveryWorkPlacement_LearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ProviderSpecDeliveryMonitoring", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithMany("ProviderSpecDeliveryMonitorings")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_ProviderSpecDeliveryMonitoring_LearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.ProviderSpecLearnerMonitoring", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithMany("ProviderSpecLearnerMonitorings")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_ProviderSpecLearnerMonitoring_Learner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.TBL_Learner", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.TBL_global", "UKPRNNavigation")
                        .WithMany("TBL_Learners")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("FK_TBLLearner_TBLglobal");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.Learner", "Learner")
                        .WithOne("TBL_Learner")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.TBL_Learner", "UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_TBL_Learner_ValidLearner");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.TBL_LearningDelivery", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.TBL_Learner", "TBL_Learner")
                        .WithMany("TBL_LearningDeliveries")
                        .HasForeignKey("UKPRN", "LearnRefNumber")
                        .HasConstraintName("FK_TBLLearningDelivery_TBLLearner");

                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.LearningDelivery", "LearningDelivery")
                        .WithOne("TBL_LearningDelivery")
                        .HasForeignKey("ESFA.DC.ILR2021.DataStore.EF.TBL_LearningDelivery", "UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_TBL_LearningDelivery_ValidLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.TBL_LearningDelivery_Period", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.TBL_LearningDelivery", "TBL_LearningDelivery")
                        .WithMany("TBL_LearningDelivery_Periods")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_TBLLearningDeliveryPeriod_TBLLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.TBL_LearningDelivery_PeriodisedValue", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.TBL_LearningDelivery", "TBL_LearningDelivery")
                        .WithMany("TBL_LearningDelivery_PeriodisedValues")
                        .HasForeignKey("UKPRN", "LearnRefNumber", "AimSeqNumber")
                        .HasConstraintName("FK_TBLLearningDeliveryPeriodisedValues_TBLLearningDelivery");
                });

            modelBuilder.Entity("ESFA.DC.ILR2021.DataStore.EF.VAL_Learner", b =>
                {
                    b.HasOne("ESFA.DC.ILR2021.DataStore.EF.VAL_global", "UKPRNNavigation")
                        .WithMany("VAL_Learners")
                        .HasForeignKey("UKPRN")
                        .HasConstraintName("VALLearner_VALglobal");
                });
#pragma warning restore 612, 618
        }
    }
}
